adapters:
 - id: input-handler
   dependencies: input
   stepName: Client Input Handler
   mainClass: com.company.namespace.InputHandler
   config:
    recordClass: com.company.data.client.laborafax
     constants:
       laborafax.UUID : "%GUUID%"
     fields:
     - mapping: laborafax.firstName
       length: 20
     - mapping: laborafax.lastName
       length: 20
     - mapping: laborafax.address
       length: 50
     - mapping: laborafax.phone
       length: 10
 - id: key-finder
   dependencies: input-handler
   stepName: Data parser step
   mainClass: com.company.namespace.KeyFinder
   config:
    recordClass: com.company.data.client.laborafax
    source: laborafax.ip.finder.com
    port:   1234
    credentials:
      certificate: laborafax.certificate.ssl
      clientKey: client.laborafax.client.pkey
 - id: data-enricher
   dependencies: key-finder
   stepName: Data parser step
   mainClass: com.company.namespace.DataEnricher
   config:
    recordClass: com.company.data.client.laborafax
    datasources:
      - name: debt
        location: /server/datasources/debt/
      - name: vehicles
        location: /server/datasources/vehicles/  
 - id: filter-client
   dependencies: data-enricher
   stepName: filter clients by status
   mainClass: com.company.namespace.FilterClients
   config:
     recordClass: com.company.data.client.laborafax
     conditions:
       condition-1: laborafax.firstName == isEmpty
       condition-2: laborafax.address == isEmpty
       condition-3: laborafax.phone != isNumeric 
 - id: calculate-models
   dependencies: filter-clients
   stepName: Calculate Client Models
   mainClass: com.company.namespace.CalculateModels
   config:
     recordClass: com.company.data.client.laborafax
     models:
       - predictScore:
           model: scoreCredit
           factor1: 0
           factor2: 999
           threshold: 0.4
       - predictFraud:
           model: clientFraud
           criteria: debtLevel
           predictionType: personalInformation
 - id: evaluate-conditions
   dependencies: calculate-models
   stepName: Evaluate Client Models
   mainClass: com.company.namespace.EvaluateConditions
   config:
     recordClass: com.company.data.client.laborafax
     evaluations:
       - evalId: model
         field: laborafax.calculated.predictedScore
         threshold: 600
       - evalId: risk
         field: laborafax.calculated.predictedRisk
         threshold: 0.8
       - evalId: decision
         source:
           - model
           - risk
         field: laborafax.calculated.outputDecision
 - id: output-handler
   dependencies: evaluate-conditions
   stepName: Generate Client Output
   mainClass: com.company.namespace.outputHandler
   config:
     recordClass: com.company.data.client.clientOutput
     format: csv
     fields:
     - mapping: laborafax.firstName
       position: 0
     - mapping: laborafax.lastName
       position: 1
     - mapping: laborafax.calculated.predictedScore
       position: 2
     - mapping: laborafax.calculated.predictedRisk
       position: 3
     - mapping: laborafax.calculated.outputDecision
       position: 4
     - mapping: laborafax.calculated.runDate
       position: 5
    

